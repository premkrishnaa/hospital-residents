
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'A8C67CDE4A4ED4E29F9CAE23623212C0'
    
_lr_action_items = {'PARTITION_B':([0,3,17,25,],[4,4,-2,-3,]),';':([5,6,7,9,18,26,31,32,35,],[10,-6,-5,16,-4,-7,-9,33,-8,]),'PARTITION_A':([0,3,17,25,],[2,2,-2,-3,]),'$end':([1,24,29,30,],[0,-1,-10,-11,]),'(':([6,],[12,]),')':([19,],[26,]),'ID':([2,4,11,13,14,21,22,23,27,28,33,34,],[6,6,6,20,20,20,-13,20,31,-12,-14,35,]),'PREFERENCE_LISTS_A':([8,15,17,25,29,30,],[13,13,-2,-3,-10,-11,]),'INT':([12,],[19,]),',':([5,6,7,9,18,26,31,32,35,],[11,-6,-5,11,-4,-7,-9,34,-8,]),':':([20,],[27,]),'END':([10,16,21,22,23,28,33,],[17,25,29,-13,30,-12,-14,]),'PREFERENCE_LISTS_B':([8,15,17,25,29,30,],[14,14,-2,-3,-10,-11,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'graph':([0,],[1,]),'pvertex_list':([2,4,],[5,9,]),'nodes':([0,3,],[3,8,]),'preference_lists':([13,14,],[21,23,]),'pvertex':([2,4,11,],[7,7,18,]),'pref_list':([13,14,21,23,],[22,22,28,28,]),'edges':([8,15,],[15,24,]),'vertex_list':([27,],[32,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> graph","S'",1,None,None,None),
  ('graph -> nodes nodes edges edges','graph',4,'p_graph','graph_parser.py',10),
  ('nodes -> PARTITION_A pvertex_list ; END','nodes',4,'p_partition_A','graph_parser.py',15),
  ('nodes -> PARTITION_B pvertex_list ; END','nodes',4,'p_partition_B','graph_parser.py',20),
  ('pvertex_list -> pvertex_list , pvertex','pvertex_list',3,'p_pvertex_list','graph_parser.py',26),
  ('pvertex_list -> pvertex','pvertex_list',1,'p_pvertex_list_terminating','graph_parser.py',31),
  ('pvertex -> ID','pvertex',1,'p_pvertex','graph_parser.py',37),
  ('pvertex -> ID ( INT )','pvertex',4,'p_pvertex_capacity','graph_parser.py',42),
  ('vertex_list -> vertex_list , ID','vertex_list',3,'p_vertex_list','graph_parser.py',47),
  ('vertex_list -> ID','vertex_list',1,'p_vertex_list_terminating','graph_parser.py',52),
  ('edges -> PREFERENCE_LISTS_A preference_lists END','edges',3,'p_preference_lists_A','graph_parser.py',57),
  ('edges -> PREFERENCE_LISTS_B preference_lists END','edges',3,'p_preference_lists_B','graph_parser.py',62),
  ('preference_lists -> preference_lists pref_list','preference_lists',2,'p_preference_lists','graph_parser.py',67),
  ('preference_lists -> pref_list','preference_lists',1,'p_preference_lists_terminating','graph_parser.py',72),
  ('pref_list -> ID : vertex_list ;','pref_list',4,'p_pref_list','graph_parser.py',77),
]
