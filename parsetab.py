
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '9ABE0D4DA40F2C8388A073B7959EBF77'
    
_lr_action_items = {'(':([8,],[15,]),'INT':([15,],[24,]),'PREFERENCE_LISTS_B':([5,10,23,25,28,29,],[11,11,-2,-3,-11,-10,]),':':([19,],[26,]),')':([24,],[30,]),'PARTITION_A':([0,2,23,25,],[3,3,-2,-3,]),'PREFERENCE_LISTS_A':([5,10,23,25,28,29,],[12,12,-2,-3,-11,-10,]),'$end':([1,17,28,29,],[0,-1,-11,-10,]),';':([6,7,8,9,22,30,31,32,35,],[-5,14,-6,16,-4,-7,33,-9,-8,]),',':([6,7,8,9,22,30,31,32,35,],[-5,13,-6,13,-4,-7,34,-9,-8,]),'ID':([3,4,11,12,13,18,20,21,26,27,33,34,],[8,8,19,19,8,-13,19,19,32,-12,-14,35,]),'PARTITION_B':([0,2,23,25,],[4,4,-2,-3,]),'END':([14,16,18,20,21,27,33,],[23,25,-13,28,29,-12,-14,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'pref_list':([11,12,20,21,],[18,18,27,27,]),'pvertex':([3,4,13,],[6,6,22,]),'pvertex_list':([3,4,],[7,9,]),'graph':([0,],[1,]),'nodes':([0,2,],[2,5,]),'vertex_list':([26,],[31,]),'preference_lists':([11,12,],[20,21,]),'edges':([5,10,],[10,17,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> graph","S'",1,None,None,None),
  ('graph -> nodes nodes edges edges','graph',4,'p_graph','graph_parser.py',10),
  ('nodes -> PARTITION_A pvertex_list ; END','nodes',4,'p_partition_A','graph_parser.py',15),
  ('nodes -> PARTITION_B pvertex_list ; END','nodes',4,'p_partition_B','graph_parser.py',20),
  ('pvertex_list -> pvertex_list , pvertex','pvertex_list',3,'p_pvertex_list','graph_parser.py',26),
  ('pvertex_list -> pvertex','pvertex_list',1,'p_pvertex_list_terminating','graph_parser.py',31),
  ('pvertex -> ID','pvertex',1,'p_pvertex','graph_parser.py',37),
  ('pvertex -> ID ( INT )','pvertex',4,'p_pvertex_capacity','graph_parser.py',42),
  ('vertex_list -> vertex_list , ID','vertex_list',3,'p_vertex_list','graph_parser.py',47),
  ('vertex_list -> ID','vertex_list',1,'p_vertex_list_terminating','graph_parser.py',52),
  ('edges -> PREFERENCE_LISTS_A preference_lists END','edges',3,'p_preference_lists_A','graph_parser.py',57),
  ('edges -> PREFERENCE_LISTS_B preference_lists END','edges',3,'p_preference_lists_B','graph_parser.py',62),
  ('preference_lists -> preference_lists pref_list','preference_lists',2,'p_preference_lists','graph_parser.py',67),
  ('preference_lists -> pref_list','preference_lists',1,'p_preference_lists_terminating','graph_parser.py',72),
  ('pref_list -> ID : vertex_list ;','pref_list',4,'p_pref_list','graph_parser.py',77),
]
