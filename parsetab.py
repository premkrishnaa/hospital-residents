
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '12319C422F7EAF443F6CCE148D8919DE'
    
_lr_action_items = {'PARTITION_B':([0,1,23,25,],[4,4,-2,-3,]),'END':([14,16,19,20,21,28,36,],[23,25,-14,27,29,-13,-15,]),'ID':([2,4,11,12,13,19,20,21,26,28,35,36,],[7,7,18,18,7,-14,18,18,33,-13,38,-15,]),',':([6,7,8,9,22,24,31,32,33,37,38,],[13,-6,-5,13,-4,30,-7,35,-10,-8,-9,]),'PREFERENCE_LISTS_A':([5,10,23,25,27,29,],[12,12,-2,-3,-12,-11,]),'(':([7,],[15,]),')':([24,34,],[31,37,]),'PARTITION_A':([0,1,23,25,],[2,2,-2,-3,]),'INT':([15,30,],[24,34,]),'$end':([3,17,27,29,],[0,-1,-12,-11,]),'PREFERENCE_LISTS_B':([5,10,23,25,27,29,],[11,11,-2,-3,-12,-11,]),';':([6,7,8,9,22,31,32,33,37,38,],[14,-6,-5,16,-4,-7,36,-10,-8,-9,]),':':([18,],[26,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'pvertex_list':([2,4,],[6,9,]),'nodes':([0,1,],[1,5,]),'graph':([0,],[3,]),'edges':([5,10,],[10,17,]),'vertex_list':([26,],[32,]),'pref_list':([11,12,20,21,],[19,19,28,28,]),'preference_lists':([11,12,],[20,21,]),'pvertex':([2,4,13,],[8,8,22,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> graph","S'",1,None,None,None),
  ('graph -> nodes nodes edges edges','graph',4,'p_graph','graph_parser.py',10),
  ('nodes -> PARTITION_A pvertex_list ; END','nodes',4,'p_partition_A','graph_parser.py',15),
  ('nodes -> PARTITION_B pvertex_list ; END','nodes',4,'p_partition_B','graph_parser.py',20),
  ('pvertex_list -> pvertex_list , pvertex','pvertex_list',3,'p_pvertex_list','graph_parser.py',26),
  ('pvertex_list -> pvertex','pvertex_list',1,'p_pvertex_list_terminating','graph_parser.py',31),
  ('pvertex -> ID','pvertex',1,'p_pvertex_one','graph_parser.py',37),
  ('pvertex -> ID ( INT )','pvertex',4,'p_pvertex_capacity_upper','graph_parser.py',42),
  ('pvertex -> ID ( INT , INT )','pvertex',6,'p_pvertex_capacity_upper_and_lower','graph_parser.py',47),
  ('vertex_list -> vertex_list , ID','vertex_list',3,'p_vertex_list','graph_parser.py',52),
  ('vertex_list -> ID','vertex_list',1,'p_vertex_list_terminating','graph_parser.py',57),
  ('edges -> PREFERENCE_LISTS_A preference_lists END','edges',3,'p_preference_lists_A','graph_parser.py',62),
  ('edges -> PREFERENCE_LISTS_B preference_lists END','edges',3,'p_preference_lists_B','graph_parser.py',67),
  ('preference_lists -> preference_lists pref_list','preference_lists',2,'p_preference_lists','graph_parser.py',72),
  ('preference_lists -> pref_list','preference_lists',1,'p_preference_lists_terminating','graph_parser.py',77),
  ('pref_list -> ID : vertex_list ;','pref_list',4,'p_pref_list','graph_parser.py',82),
]
